
Congratulations! You’ve completed the section on Data Preprocessing. It’s time to apply the knowledge and skills you’ve acquired to a project: a real-life analytical case study that you’ll complete on your own.
When you finish the project, send your work to the project reviewer for assessment. They’ll give you feedback within 24 hours. Use the feedback to make changes, then send the new version back to the project reviewer.
You might get more feedback on the new version. This is completely normal. It’s not uncommon to go through several cycles of feedback and revision.
Your project will be considered complete once the project reviewer approves it.
Project description
Your project is to prepare a report for a bank’s loan division. You’ll need to find out if a customer’s marital status and number of children have an impact on whether they will default on a loan. The bank already has some data on customers’ credit worthiness.
Your report will be considered when building a credit score for a potential customer. A credit score is used to evaluate the ability of a potential borrower to repay their loan.
Instructions for completing the project
Step 1. Open the data file /datasets/credit_scoring_eng.csv and have a look at the general information.
Step 2. Preprocess the data:

    Identify and fill in missing values
    Replace the real number data type with the integer type
    Delete duplicate data
    Categorize the data

Be sure to explain:

    Which missing values you identified
    Possible reasons these missing values were present
    Which method you used to fill in missing values
    Which method you used to find and delete duplicate data and why
    Possible reasons why duplicate data was present
    Which method you used to change the data type and why
    Which dictionaries you've selected for this dataset and why

The data may contain artifacts, or values that don't correspond to reality (for instance, a negative number of days employed). This kind of thing happens when you're working with real data. You need to describe the possible reasons such data may have turned up and process it.
Step 3. Answer these questions:

    Is there a connection between having kids and repaying a loan on time?
    Is there a connection between marital status and repaying a loan on time?
    Is there a connection between income level and repaying a loan on time?
    How do different loan purposes affect on-time loan repayment?

Interpret your answers. Explain what the results you obtained mean.
Step 4. Write an overall conclusion.
Format:
Complete the project in the Jupyter Notebook (it will open when you click Next). Write code in code cells and notes with explanations and interpretations in markdown cells. Use formatting and headings.
Description of the data

    children: the number of children in the family
    days_employed: how long the customer has been working
    dob_years: the customer’s age
    education: the customer’s education level
    education_id: identifier for the customer’s education
    family_status: the customer’s marital status
    family_status_id: identifier for the customer’s marital status
    gender: the customer’s gender
    income_type: the customer’s income type
    debt: whether the customer has ever defaulted on a loan
    total_income: monthly income
    purpose: reason for taking out a loan

How will my project be assessed?
Your reviewer will use assessment criteria to evaluate your project. Before getting started, read the criteria carefully. This will help ensure that you do a good job.
Here’s what mentors look at when assessing your project:

    How do you describe the problems identified in the data?
    What methods do you use to replace data types and to process missing values and duplicate data?
    Did you categorize the data? Why did you do it the way you did?
    Did you export the final data into pivot tables?
    Did you use try-except clauses in your code to handle any unexpected errors?
    Did you follow the correct project structure and write clean code?
    Did you draw accurate and useful conclusions?
    Did you leave comments on each step you took?